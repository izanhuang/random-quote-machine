{"version":3,"sources":["logo.svg","QuoteBox.js","App.js","reportWebVitals.js","index.js"],"names":["colors","QuoteBox","props","state","text","author","color","Math","floor","random","length","handleShare","bind","nextQuote","changeColor","changeBackgroundColor","this","temp2","randomColorIndex","axios","get","then","res","data","quotes","randomQuote","setState","document","body","style","backgroundColor","id","class","href","target","onClick","icon","faTwitter","size","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8OAAe,I,+FCMTA,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAkEWC,E,kDA9DX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,KAAM,GACNC,OAAQ,GACRC,MAAQN,EAAOO,KAAKC,MAAMD,KAAKE,SAAWT,EAAOU,UAErD,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,YAAc,EAAKC,sBAAsBH,KAA3B,gBATL,E,gEAYdI,KAAKH,c,yEAOL,IAFQ,IAAD,OACHI,EAAQD,KAAKb,MAAMe,iBACjBF,KAAKb,MAAMe,mBAAqBD,GAClCA,EAAQV,KAAKC,MAAMD,KAAKE,SAAWT,EAAOU,QAG9CS,IAAMC,IADI,0IAENC,MAAK,SAAAC,GACH,IAAIC,EAAOD,EAAIC,KAAKC,OAEhBC,EAAcF,EADHhB,KAAKC,MAAMD,KAAKE,SAAWc,EAAKb,SAG/C,EAAKgB,SAAS,CACXtB,KAAMqB,EAAW,MACjBpB,OAAQoB,EAAW,OACnBnB,MAAON,EAAOiB,U,8CAMvBU,SAASC,KAAKC,MAAMC,gBAAkBd,KAAKb,MAAMG,Q,+BAIjDU,KAAKD,wBADA,MAEmBC,KAAKb,MAArBC,EAFH,EAEGA,KAAMC,EAFT,EAESA,OACd,OACI,qBAAK0B,GAAG,oBAAR,SACI,sBAAKA,GAAG,YAAYF,MAAO,CAACvB,MAAOU,KAAKb,MAAMG,OAA9C,UACI,oBAAIyB,GAAG,OAAP,SAAe3B,IACf,oBAAG2B,GAAG,SAAN,eAAkB1B,KAClB,uBACA,mBAAG0B,GAAG,cAAcC,MAAM,UAAUC,KAAI,gDAA2C7B,EAA3C,YAAmDC,GAAU6B,OAAO,SAASC,QAASnB,KAAKL,YAAakB,MAAO,CAACC,gBAAiBd,KAAKb,MAAMG,OAApL,SACI,+BACI,cAAC,IAAD,CAAiB8B,KAAMC,IAAWC,KAAK,WAG/C,wBAAQP,GAAG,YAAYC,MAAM,UAAUG,QAASnB,KAAKH,UAAWgB,MAAO,CAACC,gBAAiBd,KAAKb,MAAMG,OAApG,iC,GAxDGiC,aCZRC,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,mBAAGV,GAAG,OAAN,mCCISW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,cCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAAS0B,eAAe,SAM1BX,M","file":"static/js/main.f42d79ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { render } from \"@testing-library/react\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst colors = [\r\n    '#1abc9c',\r\n    '#2ecc71',\r\n    '#3498db',\r\n    '#9b59b6',\r\n    '#34495e',\r\n    '#16a085',\r\n    '#27ae60',\r\n    '#2980b9',\r\n    '#8e44ad',\r\n    '#2c3e50',\r\n    '#f1c40f',\r\n    '#e67e22',\r\n    '#e74c3c',\r\n    '#f39c12',\r\n    '#d35400',\r\n    '#c0392b'\r\n];\r\n\r\nclass QuoteBox extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            text: '',\r\n            author: '',\r\n            color : colors[Math.floor(Math.random() * colors.length)]\r\n        };\r\n        this.handleShare = this.handleShare.bind(this);\r\n        this.nextQuote = this.nextQuote.bind(this);\r\n        this.changeColor = this.changeBackgroundColor.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        this.nextQuote()\r\n    }\r\n    handleShare(){\r\n\r\n    }\r\n    nextQuote(){\r\n        var temp2 = this.state.randomColorIndex;\r\n        while(this.state.randomColorIndex === temp2){\r\n            temp2 = Math.floor(Math.random() * colors.length)\r\n        }\r\n        let url = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json'\r\n        axios.get(url)\r\n           .then(res => {\r\n              let data = res.data.quotes\r\n              let quoteNum = Math.floor(Math.random() * data.length) //quote number\r\n              let randomQuote = data[quoteNum] //actual quote\r\n  \r\n              this.setState({\r\n                 text: randomQuote['quote'],\r\n                 author: randomQuote['author'],\r\n                 color: colors[temp2]\r\n              })\r\n           })\r\n    }\r\n\r\n    changeBackgroundColor() {\r\n        document.body.style.backgroundColor = this.state.color\r\n    }\r\n\r\n    render() {\r\n        this.changeBackgroundColor()\r\n        const { text, author} = this.state\r\n        return (\r\n            <div id=\"quote-box-wrapper\">\r\n                <div id=\"quote-box\" style={{color: this.state.color}}>\r\n                    <h2 id=\"text\">{text}</h2>\r\n                    <p id=\"author\">- {author}</p>\r\n                    <br />\r\n                    <a id=\"tweet-quote\" class=\"buttons\" href={`https://twitter.com/intent/tweet?text=${text} ${author}`} target=\"_blank\" onClick={this.handleShare} style={{backgroundColor: this.state.color}}>\r\n                        <span>\r\n                            <FontAwesomeIcon icon={faTwitter} size='lg' />\r\n                        </span>\r\n                    </a>\r\n                    <button id=\"new-quote\" class=\"buttons\" onClick={this.nextQuote} style={{backgroundColor: this.state.color}}>Next Quote</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuoteBox;","import logo from './logo.svg';\nimport './App.css';\nimport QuoteBox from './QuoteBox';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QuoteBox />\n      <p id=\"name\">Made by izanhuang</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}